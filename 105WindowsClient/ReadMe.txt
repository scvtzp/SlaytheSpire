========================================================================
    WIN32 응용 프로그램 : 105WindowsClient 프로젝트 개요
========================================================================

응용 프로그램 마법사에서 이 105WindowsClient 응용 프로그램을 만들었습니다.

105WindowsClient 응용 프로그램을 구성하는 각 파일에 대한
요약 설명이 포함되어 있습니다.


105WindowsClient.vcxproj
    응용 프로그램 마법사를 사용하여 생성한 VC++ 프로젝트의 기본 프로젝트 파일입니다. 파일을 생성한 Visual C++ 버전에 대한 정보와 응용 프로그램 마법사를 사용하여 선택한 플랫폼, 구성 및 프로젝트 기능에 대한 정보가 포함되어 있습니다.

105WindowsClient.vcxproj.filters
    응용 프로그램 마법사를 사용하여 생성된 VC++ 프로젝트의 필터 파일입니다. 이 파일에는 프로젝트의 파일과 필터 간의 연결 정보가 들어 있습니다. 이러한 연결은 특정 노드에서 유사한 확장명으로 그룹화된 파일을 표시하기 위해 IDE에서 사용됩니다. 예를 들어 ".cpp" 파일은 "소스 파일" 필터와 연결되어 있습니다.

105WindowsClient.cpp
    기본 응용 프로그램 소스 파일입니다.

/////////////////////////////////////////////////////////////////////////////
응용 프로그램 마법사에서 다음 리소스를 만들었습니다.

105WindowsClient.rc
    프로그램에서 사용하는 모든 Microsoft Windows 리소스의 목록입니다. 여기에는 RES 하위 디렉터리에 저장된 아이콘, 비트맵 및 커서가 포함됩니다. 이 파일은 Microsoft Visual C++에서 직접 편집할 수 있습니다.

Resource.h
    새 리소스 ID를 정의하는 표준 헤더 파일입니다. Microsoft Visual C++에서 이 파일을 읽고 업데이트합니다.

105WindowsClient.ico
    아이콘 파일이며, 응용 프로그램의 아이콘(32x32)으로 사용됩니다. 이 아이콘은 기본 리소스 파일인 105WindowsClient.rc에 의해 포함됩니다.

small.ico
    응용 프로그램의 아이콘으로 사용되는 파일로, 16x16 크기의 작은 버전의 아이콘이 포함되어 있습니다. 이 아이콘은 기본 리소스 파일인 105WindowsClient.rc에 의해 포함됩니다.

/////////////////////////////////////////////////////////////////////////////
기타 표준 파일:

StdAfx.h, StdAfx.cpp
    이 파일은 미리 컴파일된 헤더(PCH) 파일 105WindowsClient.pch와 미리 컴파일된 형식(PCT) 파일 StdAfx.obj를 빌드하는 데 사용됩니다.

/////////////////////////////////////////////////////////////////////////////
기타 참고:

응용 프로그램 마법사에서 사용하는 "TODO:" 주석은 사용자가 추가하거나 사용자 지정해야 하는 소스 코드 부분을 나타냅니다.

/////////////////////////////////////////////////////////////////////////////


// 행렬을 왜 필요한가. 
선형변환이라 ... 
// 플레이어를 표현할때 필요한 기본적인 정보. 
// 이 정보들을 보관하기 위한 용도로 사용되는 것이 행렬이다. 
그냥 객체를 표현하는데 있어 정보들을 가지고 있는 데이터 덩어리  -> 좌표, 크기, 회전 

// 너네가 알아야 되는 또한가지 
로컬스페이스와 월드 스페이스 
로컬스페이스 - 만약 코끼리와 개미가 있을때 둘다 각각 원래 실사이즈로 그리게 되면 문제가 많아진다. 
그래서 일정한 규격을 맞춰 그림을 그리는데 그림 상에서의 좌표를 로컬스페이스라 한다. 

월드 스페이스(월드 영역) - 게임상의 좌표. 
여기에서 코끼리와 개미를 각 사이즈에 맞게 늘리거나 혹은 줄여서 월드상에 배치를 한다.

// Struct.h에 형렬 관련 설명 써놓고 여기선 행렬 연산 보여줌. 
행렬에도 덧셈과 뺄셈이 있지만 우리가 사용할 것은 곱셈이다. 객체의 상태를 담을때 행렬의 곱을 사용할 것. 
두 해
주의 - 두행렬에 곱셍을 할려면 앞행렬의 열과 뒤 행렬의 행이 같아야 한다. 
2x3 3x2 = 곱셈 성립.  2 x 2
2x3 4x2 = 곱셈 성립 ㄴㄴ 


1	2		5	6		1 * 5 + 2 * 7	1 * 6 + 2 * 8	
3	4	X	7	8	=	3 * 5 + 4 * 7	3 * 6 + 4 * 8 
앞에 열과 뒤에 행끼리 곱곱곱. 


2x3 3x2 = 곱셈 성립.  2 x 2
1	2	3		1	2		1 * 1 + 2 * 3 + 3 * 5	1 * 2 + 2 * 4 + 3 * 6	
4	5	6	X	3	4	=	4 * 1 + 5 * 3 + 6 * 5	4 * 2 + 5 * 4 + 6 * 6
				5	6

// 행렬의 경우 교환법칙이 성립하지 않는다. 
행렬의 곱셈순서가 중요하다. 


행렬 관련 함수들이 존재 한다. 
항등행렬. 
항등행렬은 수에서 1과 같다. 
항등행렬은 다른 행열과 예외로 교환 법칙이 성립한다. 

1	0	0	0
0	1	0	0
0	0	1	0
0	0	0	1

1	0	0	0		1	0	0	0		1	0	0	0
0	1	0	0	X	0	1	0	0 =		0	1	0	0
0	0	1	0		0	0	1	0		0	0	1	0
0	0	0	1		10	20	0	1		10	20	0	1

항등행렬을 만들어 주는 함수. 
D3DXMATRIX* D3DXMatrixIdentity(D3DXMATRIX* pOut)

크기행렬
- 여기에서의 크기는 실제 크기가 아닌 크기 증가 비율. 

* 처음 들어가면 행렬을 일단 항등행렬로 만들고 시작한다. 

 - _11, _22, _33
X	0	0	0
0	X	0	0
0	0	X	0
0	0	0	0
- 만약 내가 여기다 음수를 집어넣게 되면 ??? 나중에 그림 그려서 보여줄께 이건 반전이 일어난다. 
크기행렬 변환 함수. 
D3DXMATRIX* D3DXMatrixScaling(D3DXMATRIX* pOut, float x, float y, float z); 



이동행렬 
- 객체의 이동 상태를 나타내는 행렬. 
- 이 함수는 내부적으로 함수에 들오면 일단 항등행렬로 만든뒤 41, 42 , 43번째 원소에 영향을 끼친다. 
0	0	0	0
0	0	0	0
0	0	0	0
X	X	X	0
D3DXMATRIX* D3DXMatrixTranslation(D3DXMATRIX* pOut, float x, float y, float z);

회전 행렬 
회전행렬에는 3가지가 있다. 

*X축 회전 행렬 함수. 

0		0		0		0
0		cos		sin		0
0		-sin	cos		0
0		0		0		0

D3DXMatrixRotationX(D3DXMATRIX* pOut, float fAngle)
- 애가 받는 각도는 라디안을 받는다. 

*Y축
cos		0		-sin	0
0		0		0		0
sin		0		cos		0
0		0		0		0

D3DXMatrixRotationY(D3DXMATRIX* pOut, float fAngle)
- 애가 받는 각도는 라디안을 받는다. 

*Z축
cos		sin		0		0
-sin	cos		0		0
0		0		0		0
0		0		0		0

= x cos@ - y sin@, x sin@ + ycos@

D3DXMatrixRotationZ(D3DXMATRIX* pOut, float fAngle)
- 애가 받는 각도는 라디안을 받는다. 

내가 지금 말하고 있는 모든 행렬 관련 함수는 처음 들어가면 항등행렬로 먼저 변환 한다. 반드시 기억해둬라. 

